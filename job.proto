syntax = "proto2";

import "google/protobuf/timestamp.proto";
import "organization.proto";
import "pickup_location.proto";
import "driver_on_shift.proto";

option go_package = "./pb";

enum JobType {
  JOB_TYPE_UNDEFINED = 0;
  JOB_TYPE_SERVICE = 1;
  JOB_TYPE_ADD_BUNKER = 2;
  JOB_TYPE_REMOVE_BUNKER = 3;
}

enum JobStatus {
  JOB_STATUS_UNDEFINED = 0;
  JOB_STATUS_CREATED = 1;
  JOB_STATUS_ASSIGNED = 2;
  JOB_STATUS_ENROUTE = 3;
  JOB_STATUS_COMPLETED = 4;
  JOB_STATUS_CANCELLED = 5;
  JOB_STATUS_ON_SERVICE = 6;
}

enum DispatcherReviewStatus {
  DISPATCHER_REVIEW_STATUS_UNDEFINED = 0;
  DISPATCHER_REVIEW_STATUS_PENDING = 1;
  DISPATCHER_REVIEW_STATUS_APPROVED = 2;
  DISPATCHER_REVIEW_STATUS_REJECTED = 3;
  DISPATCHER_REVIEW_STATUS_SUSPICIOUS = 4;
}

// GET => /v1/platform/job/{id}
message Job {
  required uint64 id = 1;
  required google.protobuf.Timestamp created_at = 2;
  required uint64 service_provider_id = 3;
  required uint64 service_receiver_id = 4;
  optional google.protobuf.Timestamp time_window_start_at = 5;
  optional google.protobuf.Timestamp time_window_end_at = 6;
  optional uint64 sequence_idx = 7;
  required uint64 author_id = 8;
  optional uint64 driver_on_shift_id = 9;
  required uint64 pickup_location_id = 10;
  optional string service_started_report_url = 11;
  optional string service_ended_report_url = 12;
  optional uint64 route_id = 13;
  optional string driver_comment = 14;
  optional google.protobuf.Timestamp plan_start_at = 16;
  optional google.protobuf.Timestamp plan_end_at = 17;
  optional google.protobuf.Timestamp fact_start_at = 18;
  optional google.protobuf.Timestamp fact_end_at = 19;
  required JobStatus status = 20;
  optional Organization service_receiver = 21;
  optional PickupLocation pickup_location = 22;
  optional DriverOnShift driver_on_shift = 23;
  required JobType type = 24;
  required DispatcherReviewStatus dispatcher_review_status = 25;
  optional double service_start_photo_lat = 26;
  optional double service_start_photo_lon = 27;
  optional double service_end_photo_lat = 28;
  optional double service_end_photo_lon = 29;
  optional string container_name = 30;
  optional uint64 job_tariff = 31;
  optional bool is_pseudo = 32;
}

message JobCreate {
  optional uint64 service_provider_id = 1;
  optional uint64 service_receiver_id = 2;
  optional google.protobuf.Timestamp time_window_start_at = 3;
  optional google.protobuf.Timestamp time_window_end_at = 4;
  optional uint64 sequence_idx = 5;
  optional uint64 author_id = 6;
  optional uint64 driver_on_shift_id = 7;
  required uint64 pickup_location_id = 8;
  optional string service_started_report_url = 9;
  optional string service_ended_report_url = 10;
  optional uint64 route_id = 11;
  optional string driver_comment = 12;
  optional google.protobuf.Timestamp plan_start_at = 13;
  optional google.protobuf.Timestamp plan_end_at = 14;
  optional JobType type = 15;
  optional uint64 job_tariff = 16;
  optional bool is_pseudo = 17;
}

message JobUpdate {
  required uint64 id = 1;
  optional uint64 service_provider_id = 2;
  optional uint64 service_receiver_id = 3;
  optional google.protobuf.Timestamp time_window_start_at = 4;
  optional google.protobuf.Timestamp time_window_end_at = 5;
  optional uint64 sequence_idx = 6;
  optional uint64 driver_on_shift_id = 7;
  optional uint64 pickup_location_id = 8;
  optional string service_started_report_url = 9;
  optional string service_ended_report_url = 10;
  optional uint64 route_id = 11;
  optional string driver_comment = 12;
  optional google.protobuf.Timestamp plan_start_at = 13;
  optional google.protobuf.Timestamp plan_end_at = 14;
  optional google.protobuf.Timestamp fact_start_at = 15;
  optional google.protobuf.Timestamp fact_end_at = 16;
  optional JobStatus status = 17;
  optional JobType type = 18;
  optional DispatcherReviewStatus dispatcher_review_status = 19;
  optional double service_start_photo_lat = 20;
  optional double service_start_photo_lon = 21;
  optional double service_end_photo_lat = 22;
  optional double service_end_photo_lon = 23;
  optional string container_name = 24;
  optional uint64 job_tariff = 25;
  optional bool is_pseudo = 26;
}

// POST => /v1/platform/job/status_update
// Sent when the job status is updated.
// if status is `JOB_STATUS_COMPLETED` then the system must update:
// - `route[route_id].num_completed_jobs`
message JobStatusUpdate {
  required uint64 id = 1;
  required JobStatus status = 2;
}

// POST => /v1/platform/job/pickup_start
// Sent when the driver arrives at the waste pickup point.
// When the message arrived, updates:
// - `pickup_started_at`
message JobPickUpStart {
  required uint64 id = 1;
}

// POST => /v1/platform/job/pickup_finish
// Sent when the driver finishes the waste pickup.
// When the message arrived, updates:
// - `pickup_finished_at`
message JobPickUpFinish {
  required uint64 id = 1;
}

// GET => /v1/platform/job/list
// Params:
// - assigned : bool
// - completed : bool
// - cancelled : bool
message JobList {
  repeated Job jobs = 1;
}
